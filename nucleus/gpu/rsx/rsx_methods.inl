/**
 * (c) 2014-2016 Alexandro Sanchez Bach. All rights reserved.
 * Released under GPL v2 license. Read LICENSE for more details.
 */

/** 
 * NV40_CHANNEL_DMA (NV406E)
 * These methods are executed by the PFIFO puller itself, instead of being forwared to an engine.
 */
METHOD( NV406E_SET_REFERENCE,                     0x0050 ) // Modify DMA control's reference register
METHOD( NV406E_SET_CONTEXT_DMA_SEMAPHORE,         0x0060 ) // DMA context object
METHOD( NV406E_SEMAPHORE_OFFSET,                  0x0064 ) // Offset has to be smaller than 0x1000 and 4-aligned.
METHOD( NV406E_SEMAPHORE_ACQUIRE,                 0x0068 ) // Make the PFIFO puller wait until offset contains the parameter.
METHOD( NV406E_SEMAPHORE_RELEASE,                 0x006C ) // Write parameter to the specified offset.

/**
 * NV40_CURIE_PRIMITIVE (NV4097)
 */
METHOD( NV4097_SET_OBJECT,                        0x0000 )
METHOD( NV4097_NO_OPERATION,                      0x0100 )
METHOD( NV4097_NOTIFY,                            0x0104 )
METHOD( NV4097_WAIT_FOR_IDLE,                     0x0110 )
METHOD( NV4097_PM_TRIGGER,                        0x0140 )
METHOD( NV4097_SET_CONTEXT_DMA_NOTIFIES,          0x0180 )
METHOD( NV4097_SET_CONTEXT_DMA_A,                 0x0184 )
METHOD( NV4097_SET_CONTEXT_DMA_B,                 0x0188 )
METHOD( NV4097_SET_CONTEXT_DMA_COLOR_B,           0x018C )
METHOD( NV4097_SET_CONTEXT_DMA_STATE,             0x0190 )
METHOD( NV4097_SET_CONTEXT_DMA_COLOR_A,           0x0194 )
METHOD( NV4097_SET_CONTEXT_DMA_ZETA,              0x0198 )
METHOD( NV4097_SET_CONTEXT_DMA_VERTEX_A,          0x019C )
METHOD( NV4097_SET_CONTEXT_DMA_VERTEX_B,          0x01A0 )
METHOD( NV4097_SET_CONTEXT_DMA_SEMAPHORE,         0x01A4 )
METHOD( NV4097_SET_CONTEXT_DMA_REPORT,            0x01A8 )
METHOD( NV4097_SET_CONTEXT_DMA_CLIP_ID,           0x01AC )
METHOD( NV4097_SET_CONTEXT_DMA_CULL_DATA,         0x01B0 )
METHOD( NV4097_SET_CONTEXT_DMA_COLOR_C,           0x01B4 )
METHOD( NV4097_SET_CONTEXT_DMA_COLOR_D,           0x01B8 )
METHOD( NV4097_SET_SURFACE_CLIP_HORIZONTAL,       0x0200 )
METHOD( NV4097_SET_SURFACE_CLIP_VERTICAL,         0x0204 )
METHOD( NV4097_SET_SURFACE_FORMAT,                0x0208 )
METHOD( NV4097_SET_SURFACE_PITCH_A,               0x020C )
METHOD( NV4097_SET_SURFACE_COLOR_AOFFSET,         0x0210 )
METHOD( NV4097_SET_SURFACE_ZETA_OFFSET,           0x0214 )
METHOD( NV4097_SET_SURFACE_COLOR_BOFFSET,         0x0218 )
METHOD( NV4097_SET_SURFACE_PITCH_B,               0x021C )
METHOD( NV4097_SET_SURFACE_COLOR_TARGET,          0x0220 )
METHOD( NV4097_SET_SURFACE_PITCH_Z,               0x022C )
METHOD( NV4097_INVALIDATE_ZCULL,                  0x0234 )
METHOD( NV4097_SET_CYLINDRICAL_WRAP,              0x0238 )
METHOD( NV4097_SET_CYLINDRICAL_WRAP1,             0x023C )
METHOD( NV4097_SET_SURFACE_PITCH_C,               0x0280 )
METHOD( NV4097_SET_SURFACE_PITCH_D,               0x0284 )
METHOD( NV4097_SET_SURFACE_COLOR_COFFSET,         0x0288 )
METHOD( NV4097_SET_SURFACE_COLOR_DOFFSET,         0x028C )
METHOD( NV4097_SET_WINDOW_OFFSET,                 0x02B8 )
METHOD( NV4097_SET_WINDOW_CLIP_TYPE,              0x02BC )
METHOD( NV4097_SET_WINDOW_CLIP_HORIZONTAL,        0x02C0 )
METHOD( NV4097_SET_WINDOW_CLIP_VERTICAL,          0x02C4 )
METHOD( NV4097_SET_DITHER_ENABLE,                 0x0300 )
METHOD( NV4097_SET_ALPHA_TEST_ENABLE,             0x0304 )
METHOD( NV4097_SET_ALPHA_FUNC,                    0x0308 )
METHOD( NV4097_SET_ALPHA_REF,                     0x030C )
METHOD( NV4097_SET_BLEND_ENABLE,                  0x0310 )
METHOD( NV4097_SET_BLEND_FUNC_SFACTOR,            0x0314 )
METHOD( NV4097_SET_BLEND_FUNC_DFACTOR,            0x0318 )
METHOD( NV4097_SET_BLEND_COLOR,                   0x031C )
METHOD( NV4097_SET_BLEND_EQUATION,                0x0320 )
METHOD( NV4097_SET_COLOR_MASK,                    0x0324 )
METHOD( NV4097_SET_STENCIL_TEST_ENABLE,           0x0328 )
METHOD( NV4097_SET_STENCIL_MASK,                  0x032C )
METHOD( NV4097_SET_STENCIL_FUNC,                  0x0330 )
METHOD( NV4097_SET_STENCIL_FUNC_REF,              0x0334 )
METHOD( NV4097_SET_STENCIL_FUNC_MASK,             0x0338 )
METHOD( NV4097_SET_STENCIL_OP_FAIL,               0x033C )
METHOD( NV4097_SET_STENCIL_OP_ZFAIL,              0x0340 )
METHOD( NV4097_SET_STENCIL_OP_ZPASS,              0x0344 )
METHOD( NV4097_SET_TWO_SIDED_STENCIL_TEST_ENABLE, 0x0348 )
METHOD( NV4097_SET_BACK_STENCIL_MASK,             0x034C )
METHOD( NV4097_SET_BACK_STENCIL_FUNC,             0x0350 )
METHOD( NV4097_SET_BACK_STENCIL_FUNC_REF,         0x0354 )
METHOD( NV4097_SET_BACK_STENCIL_FUNC_MASK,        0x0358 )
METHOD( NV4097_SET_BACK_STENCIL_OP_FAIL,          0x035C )
METHOD( NV4097_SET_BACK_STENCIL_OP_ZFAIL,         0x0360 )
METHOD( NV4097_SET_BACK_STENCIL_OP_ZPASS,         0x0364 )
METHOD( NV4097_SET_SHADE_MODE,                    0x0368 )
METHOD( NV4097_SET_BLEND_ENABLE_MRT,              0x036C )
METHOD( NV4097_SET_COLOR_MASK_MRT,                0x0370 )
METHOD( NV4097_SET_LOGIC_OP_ENABLE,               0x0374 )
METHOD( NV4097_SET_LOGIC_OP,                      0x0378 )
METHOD( NV4097_SET_BLEND_COLOR2,                  0x037C )
METHOD( NV4097_SET_DEPTH_BOUNDS_TEST_ENABLE,      0x0380 )
METHOD( NV4097_SET_DEPTH_BOUNDS_MIN,              0x0384 )
METHOD( NV4097_SET_DEPTH_BOUNDS_MAX,              0x0388 )
METHOD( NV4097_SET_CLIP_MIN,                      0x0394 )
METHOD( NV4097_SET_CLIP_MAX,                      0x0398 )
METHOD( NV4097_SET_CONTROL0,                      0x03B0 )
METHOD( NV4097_SET_LINE_WIDTH,                    0x03B8 )
METHOD( NV4097_SET_LINE_SMOOTH_ENABLE,            0x03BC )
METHOD( NV4097_SET_ANISO_SPREAD,                  0x03C0 )
METHOD( NV4097_SET_SCISSOR_HORIZONTAL,            0x08C0 )
METHOD( NV4097_SET_SCISSOR_VERTICAL,              0x08C4 )
METHOD( NV4097_SET_FOG_MODE,                      0x08CC )
METHOD( NV4097_SET_FOG_PARAMS,                    0x08D0 )
METHOD( NV4097_SET_SHADER_PROGRAM,                0x08E4 )
METHOD( NV4097_SET_VERTEX_TEXTURE_OFFSET,         0x0900 )
METHOD( NV4097_SET_VERTEX_TEXTURE_FORMAT,         0x0904 )
METHOD( NV4097_SET_VERTEX_TEXTURE_ADDRESS,        0x0908 )
METHOD( NV4097_SET_VERTEX_TEXTURE_CONTROL0,       0x090C )
METHOD( NV4097_SET_VERTEX_TEXTURE_CONTROL3,       0x0910 )
METHOD( NV4097_SET_VERTEX_TEXTURE_FILTER,         0x0914 )
METHOD( NV4097_SET_VERTEX_TEXTURE_IMAGE_RECT,     0x0918 )
METHOD( NV4097_SET_VERTEX_TEXTURE_BORDER_COLOR,   0x091C )
METHOD( NV4097_SET_VIEWPORT_HORIZONTAL,           0x0A00 )
METHOD( NV4097_SET_VIEWPORT_VERTICAL,             0x0A04 )
METHOD( NV4097_SET_POINT_CENTER_MODE,             0x0A0C )
METHOD( NV4097_ZCULL_SYNC,                        0x0A1C )
METHOD( NV4097_SET_VIEWPORT_OFFSET,               0x0A20 )
METHOD( NV4097_SET_VIEWPORT_SCALE,                0x0A30 )
METHOD( NV4097_SET_POLY_OFFSET_POINT_ENABLE,      0x0A60 )
METHOD( NV4097_SET_POLY_OFFSET_LINE_ENABLE,       0x0A64 )
METHOD( NV4097_SET_POLY_OFFSET_FILL_ENABLE,       0x0A68 )
METHOD( NV4097_SET_DEPTH_FUNC,                    0x0A6C )
METHOD( NV4097_SET_DEPTH_MASK,                    0x0A70 )
METHOD( NV4097_SET_DEPTH_TEST_ENABLE,             0x0A74 )
METHOD( NV4097_SET_POLYGON_OFFSET_SCALE_FACTOR,   0x0A78 )
METHOD( NV4097_SET_POLYGON_OFFSET_BIAS,           0x0A7C )
METHOD( NV4097_SET_VERTEX_DATA_SCALED4S_M,        0x0A80 )
METHOD( NV4097_SET_TEXTURE_CONTROL2,              0x0B00 )
METHOD( NV4097_SET_TEX_COORD_CONTROL,             0x0B40 )
METHOD( NV4097_SET_TRANSFORM_PROGRAM,             0x0B80 ) // Copy 128-bit data to PGRAPH's VPE instruction buffer at the LOAD offset by collecting 32-bit chunks.
METHOD( NV4097_SET_SPECULAR_ENABLE,               0x1428 )
METHOD( NV4097_SET_TWO_SIDE_LIGHT_EN,             0x142C )
METHOD( NV4097_CLEAR_ZCULL_SURFACE,               0x1438 )
METHOD( NV4097_SET_PERFORMANCE_PARAMS,            0x1450 )
METHOD( NV4097_SET_FLAT_SHADE_OP,                 0x1454 )
METHOD( NV4097_SET_EDGE_FLAG,                     0x145C )
METHOD( NV4097_SET_USER_CLIP_PLANE_CONTROL,       0x1478 )
METHOD( NV4097_SET_POLYGON_STIPPLE,               0x147C )
METHOD( NV4097_SET_POLYGON_STIPPLE_PATTERN,       0x1480 )
METHOD( NV4097_SET_VERTEX_DATA3F_M,               0x1500 )
METHOD( NV4097_SET_VERTEX_DATA_ARRAY_OFFSET,      0x1680 )
METHOD( NV4097_INVALIDATE_VERTEX_CACHE_FILE,      0x1710 )
METHOD( NV4097_INVALIDATE_VERTEX_FILE,            0x1714 )
METHOD( NV4097_PIPE_NOP,                          0x1718 )
METHOD( NV4097_SET_VERTEX_DATA_BASE_OFFSET,       0x1738 )
METHOD( NV4097_SET_VERTEX_DATA_BASE_INDEX,        0x173C )
METHOD( NV4097_SET_VERTEX_DATA_ARRAY_FORMAT,      0x1740 )
METHOD( NV4097_CLEAR_REPORT_VALUE,                0x17C8 )
METHOD( NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE,      0x17CC )
METHOD( NV4097_GET_REPORT,                        0x1800 )
METHOD( NV4097_SET_ZCULL_STATS_ENABLE,            0x1804 )
METHOD( NV4097_SET_BEGIN_END,                     0x1808 ) // Locks or unlocks PGRAPH state while submitting vertex/index/inlined data to draw
METHOD( NV4097_ARRAY_ELEMENT16,                   0x180C )
METHOD( NV4097_ARRAY_ELEMENT32,                   0x1810 )
METHOD( NV4097_DRAW_ARRAYS,                       0x1814 )
METHOD( NV4097_INLINE_ARRAY,                      0x1818 )
METHOD( NV4097_SET_INDEX_ARRAY_ADDRESS,           0x181C )
METHOD( NV4097_SET_INDEX_ARRAY_DMA,               0x1820 )
METHOD( NV4097_DRAW_INDEX_ARRAY,                  0x1824 )
METHOD( NV4097_SET_FRONT_POLYGON_MODE,            0x1828 )
METHOD( NV4097_SET_BACK_POLYGON_MODE,             0x182C )
METHOD( NV4097_SET_CULL_FACE,                     0x1830 )
METHOD( NV4097_SET_FRONT_FACE,                    0x1834 )
METHOD( NV4097_SET_POLY_SMOOTH_ENABLE,            0x1838 )
METHOD( NV4097_SET_CULL_FACE_ENABLE,              0x183C )
METHOD( NV4097_SET_TEXTURE_CONTROL3,              0x1840 )
METHOD( NV4097_SET_VERTEX_DATA2F_M,               0x1880 )
METHOD( NV4097_SET_VERTEX_DATA2S_M,               0x1900 )
METHOD( NV4097_SET_VERTEX_DATA4UB_M,              0x1940 )
METHOD( NV4097_SET_VERTEX_DATA4S_M,               0x1980 )
METHOD( NV4097_SET_TEXTURE_OFFSET,                0x1A00 )
METHOD( NV4097_SET_TEXTURE_FORMAT,                0x1A04 )
METHOD( NV4097_SET_TEXTURE_ADDRESS,               0x1A08 )
METHOD( NV4097_SET_TEXTURE_CONTROL0,              0x1A0C )
METHOD( NV4097_SET_TEXTURE_CONTROL1,              0x1A10 )
METHOD( NV4097_SET_TEXTURE_FILTER,                0x1A14 )
METHOD( NV4097_SET_TEXTURE_IMAGE_RECT,            0x1A18 )
METHOD( NV4097_SET_TEXTURE_BORDER_COLOR,          0x1A1C )
METHOD( NV4097_SET_VERTEX_DATA4F_M,               0x1C00 )
METHOD( NV4097_SET_COLOR_KEY_COLOR,               0x1D00 )
METHOD( NV4097_SET_SHADER_CONTROL,                0x1D60 )
METHOD( NV4097_SET_INDEXED_CONSTANT_READ_LIMITS,  0x1D64 )
METHOD( NV4097_SET_SEMAPHORE_OFFSET,              0x1D6C )
METHOD( NV4097_BACK_END_WRITE_SEMAPHORE_RELEASE,  0x1D70 )
METHOD( NV4097_TEXTURE_READ_SEMAPHORE_RELEASE,    0x1D74 )
METHOD( NV4097_SET_ZMIN_MAX_CONTROL,              0x1D78 )
METHOD( NV4097_SET_ANTI_ALIASING_CONTROL,         0x1D7C )
METHOD( NV4097_SET_SURFACE_COMPRESSION,           0x1D80 )
METHOD( NV4097_SET_ZCULL_EN,                      0x1D84 )
METHOD( NV4097_SET_SHADER_WINDOW,                 0x1D88 )
METHOD( NV4097_SET_ZSTENCIL_CLEAR_VALUE,          0x1D8C )
METHOD( NV4097_SET_COLOR_CLEAR_VALUE,             0x1D90 )
METHOD( NV4097_CLEAR_SURFACE,                     0x1D94 )
METHOD( NV4097_SET_CLEAR_RECT_HORIZONTAL,         0x1D98 )
METHOD( NV4097_SET_CLEAR_RECT_VERTICAL,           0x1D9C )
METHOD( NV4097_SET_CLIP_ID_TEST_ENABLE,           0x1DA4 )
METHOD( NV4097_SET_RESTART_INDEX_ENABLE,          0x1DAC )
METHOD( NV4097_SET_RESTART_INDEX,                 0x1DB0 )
METHOD( NV4097_SET_LINE_STIPPLE,                  0x1DB4 )
METHOD( NV4097_SET_LINE_STIPPLE_PATTERN,          0x1DB8 )
METHOD( NV4097_SET_VERTEX_DATA1F_M,               0x1E40 )
METHOD( NV4097_SET_TRANSFORM_EXECUTION_MODE,      0x1E94 )
METHOD( NV4097_SET_RENDER_ENABLE,                 0x1E98 )
METHOD( NV4097_SET_TRANSFORM_PROGRAM_LOAD,        0x1E9C ) // Set PGRAPH's VPE LOAD register, which specifies the offset where new instructions are copied.
METHOD( NV4097_SET_TRANSFORM_PROGRAM_START,       0x1EA0 ) // Set PGRAPH's VPE START register.
METHOD( NV4097_SET_ZCULL_CONTROL0,                0x1EA4 )
METHOD( NV4097_SET_ZCULL_CONTROL1,                0x1EA8 )
METHOD( NV4097_SET_SCULL_CONTROL,                 0x1EAC )
METHOD( NV4097_SET_POINT_SIZE,                    0x1EE0 )
METHOD( NV4097_SET_POINT_PARAMS_ENABLE,           0x1EE4 )
METHOD( NV4097_SET_POINT_SPRITE_CONTROL,          0x1EE8 )
METHOD( NV4097_SET_TRANSFORM_TIMEOUT,             0x1EF8 )
METHOD( NV4097_SET_TRANSFORM_CONSTANT_LOAD,       0x1EFC )
METHOD( NV4097_SET_TRANSFORM_CONSTANT,            0x1F00 )
METHOD( NV4097_SET_FREQUENCY_DIVIDER_OPERATION,   0x1FC0 )
METHOD( NV4097_SET_ATTRIB_COLOR,                  0x1FC4 )
METHOD( NV4097_SET_ATTRIB_TEX_COORD,              0x1FC8 )
METHOD( NV4097_SET_ATTRIB_TEX_COORD_EX,           0x1FCC )
METHOD( NV4097_SET_ATTRIB_UCLIP0,                 0x1FD0 )
METHOD( NV4097_SET_ATTRIB_UCLIP1,                 0x1FD4 )
METHOD( NV4097_INVALIDATE_L2,                     0x1FD8 )
METHOD( NV4097_SET_REDUCE_DST_COLOR,              0x1FE0 )
METHOD( NV4097_SET_NO_PARANOID_TEXTURE_FETCHES,   0x1FE8 )
METHOD( NV4097_SET_SHADER_PACKER,                 0x1FEC )
METHOD( NV4097_SET_VERTEX_ATTRIB_INPUT_MASK,      0x1FF0 )
METHOD( NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK,     0x1FF4 )
METHOD( NV4097_SET_TRANSFORM_BRANCH_BITS,         0x1FF8 )

/**
 * NV03_MEMORY_TO_MEMORY_FORMAT (NV0039)
 */
METHOD( NV0039_SET_OBJECT,                        0x2000 )
METHOD( NV0039_SET_CONTEXT_DMA_NOTIFIES,          0x2180 )
METHOD( NV0039_SET_CONTEXT_DMA_BUFFER_IN,         0x2184 )
METHOD( NV0039_SET_CONTEXT_DMA_BUFFER_OUT,        0x2188 )
METHOD( NV0039_OFFSET_IN,                         0x230C )
METHOD( NV0039_OFFSET_OUT,                        0x2310 )
METHOD( NV0039_PITCH_IN,                          0x2314 )
METHOD( NV0039_PITCH_OUT,                         0x2318 )
METHOD( NV0039_LINE_LENGTH_IN,                    0x231C )
METHOD( NV0039_LINE_COUNT,                        0x2320 )
METHOD( NV0039_FORMAT,                            0x2324 )
METHOD( NV0039_BUFFER_NOTIFY,                     0x2328 )

/**
 * NV30_CONTEXT_SURFACES_2D (NV3062)
 */
METHOD( NV3062_SET_OBJECT,                        0x6000 )
METHOD( NV3062_SET_CONTEXT_DMA_NOTIFIES,          0x6180 )
METHOD( NV3062_SET_CONTEXT_DMA_IMAGE_SOURCE,      0x6184 )
METHOD( NV3062_SET_CONTEXT_DMA_IMAGE_DESTIN,      0x6188 )
METHOD( NV3062_SET_COLOR_FORMAT,                  0x6300 )
METHOD( NV3062_SET_PITCH,                         0x6304 )
METHOD( NV3062_SET_OFFSET_SOURCE,                 0x6308 )
METHOD( NV3062_SET_OFFSET_DESTIN,                 0x630C )

/**
 * NV30_CONTEXT_SURFACE_SWIZZLED (NV309E)
 */
METHOD( NV309E_SET_OBJECT,                        0x8000 )
METHOD( NV309E_SET_CONTEXT_DMA_NOTIFIES,          0x8180 )
METHOD( NV309E_SET_CONTEXT_DMA_IMAGE,             0x8184 )
METHOD( NV309E_SET_FORMAT,                        0x8300 )
METHOD( NV309E_SET_OFFSET,                        0x8304 )

/**
 * NV30_IMAGE_FROM_CPU (NV308A)
 */
METHOD( NV308A_SET_OBJECT,                        0xA000 )
METHOD( NV308A_SET_CONTEXT_DMA_NOTIFIES,          0xA180 )
METHOD( NV308A_SET_CONTEXT_COLOR_KEY,             0xA184 )
METHOD( NV308A_SET_CONTEXT_CLIP_RECTANGLE,        0xA188 )
METHOD( NV308A_SET_CONTEXT_PATTERN,               0xA18C )
METHOD( NV308A_SET_CONTEXT_ROP,                   0xA190 )
METHOD( NV308A_SET_CONTEXT_BETA1,                 0xA194 )
METHOD( NV308A_SET_CONTEXT_BETA4,                 0xA198 )
METHOD( NV308A_SET_CONTEXT_SURFACE,               0xA19C )
METHOD( NV308A_SET_COLOR_CONVERSION,              0xA2F8 )
METHOD( NV308A_SET_OPERATION,                     0xA2FC )
METHOD( NV308A_SET_COLOR_FORMAT,                  0xA300 )
METHOD( NV308A_POINT,                             0xA304 )
METHOD( NV308A_SIZE_OUT,                          0xA308 )
METHOD( NV308A_SIZE_IN,                           0xA30C )
METHOD( NV308A_COLOR,                             0xA400 )

/**
 * NV30_SCALED_IMAGE_FROM_MEMORY (NV3089)
 */
METHOD( NV3089_SET_OBJECT,                        0xC000 )
METHOD( NV3089_SET_CONTEXT_DMA_NOTIFIES,          0xC180 )
METHOD( NV3089_SET_CONTEXT_DMA_IMAGE,             0xC184 )
METHOD( NV3089_SET_CONTEXT_PATTERN,               0xC188 )
METHOD( NV3089_SET_CONTEXT_ROP,                   0xC18C )
METHOD( NV3089_SET_CONTEXT_BETA1,                 0xC190 )
METHOD( NV3089_SET_CONTEXT_BETA4,                 0xC194 )
METHOD( NV3089_SET_CONTEXT_SURFACE,               0xC198 )
METHOD( NV3089_SET_COLOR_CONVERSION,              0xC2FC )
METHOD( NV3089_SET_COLOR_FORMAT,                  0xC300 )
METHOD( NV3089_SET_OPERATION,                     0xC304 )
METHOD( NV3089_CLIP_POINT,                        0xC308 )
METHOD( NV3089_CLIP_SIZE,                         0xC30C )
METHOD( NV3089_IMAGE_OUT_POINT,                   0xC310 )
METHOD( NV3089_IMAGE_OUT_SIZE,                    0xC314 )
METHOD( NV3089_DS_DX,                             0xC318 )
METHOD( NV3089_DT_DY,                             0xC31C )
METHOD( NV3089_IMAGE_IN_SIZE,                     0xC400 )
METHOD( NV3089_IMAGE_IN_FORMAT,                   0xC404 )
METHOD( NV3089_IMAGE_IN_OFFSET,                   0xC408 )
METHOD( NV3089_IMAGE_IN,                          0xC40C )

/**
 * SCE DRIVER
 * These methods are executed by the CellOS-LV1 Hypervisor, not by the RSX.
 */
METHOD( SCE_DRIVER_SET_OBJECT,                    0xE000 )
METHOD( SCE_DRIVER_FLIP,                          0xE920 ) // Head is specified by the 2 possible indices [0xE920:0E924]
METHOD( SCE_DRIVER_QUEUE,                         0xE940 ) // Head is specified by the 8 possible indices [0xE940:0E95C]
METHOD( SCE_DRIVER_INTERRUPT,                     0xEB00 )
