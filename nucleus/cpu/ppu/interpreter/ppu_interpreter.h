/**
 * (c) 2014 Nucleus project. All rights reserved.
 * Released under GPL v2 license. Read LICENSE for more details.
 */

#pragma once

#include "nucleus/common.h"
#include "nucleus/cpu/translator.h"
#include "nucleus/cpu/ppu/ppu_thread.h"
#include "nucleus/cpu/ppu/ppu_instructions.h"

class PPUInterpreter : public CellTranslator
{
    PPUThread& thread;
    
public:
    PPUInterpreter(PPUThread& thr);

    // Decode and execute one instruction
    void step();

    // Instruction callers
    static void callTable4  (PPUInstruction instr, PPUThread& thread);
    static void callTable4_ (PPUInstruction instr, PPUThread& thread);
    static void callTable19 (PPUInstruction instr, PPUThread& thread);
    static void callTable30 (PPUInstruction instr, PPUThread& thread);
    static void callTable31 (PPUInstruction instr, PPUThread& thread);
    static void callTable58 (PPUInstruction instr, PPUThread& thread);
    static void callTable59 (PPUInstruction instr, PPUThread& thread);
    static void callTable62 (PPUInstruction instr, PPUThread& thread);
    static void callTable63 (PPUInstruction instr, PPUThread& thread);
    static void callTable63_(PPUInstruction instr, PPUThread& thread);

    /**
     * Auxiliary functions
     */
    static inline bool isCarry(u64 a, u64 b);
    static inline bool isCarry(u64 a, u64 b, u64 c);
    static inline f32 CheckVSCR_NJ(PPUThread& thread, const f32 v);
    static inline bool CheckCondition(PPUThread& thread, u32 bo, u32 bi);
    static inline u64& GetRegBySPR(PPUThread& thread, u32 spr);

    static void add(PPUInstruction instr, PPUThread& thread);
    static void addc(PPUInstruction instr, PPUThread& thread);
    static void adde(PPUInstruction instr, PPUThread& thread);
    static void addi(PPUInstruction instr, PPUThread& thread);
    static void addic(PPUInstruction instr, PPUThread& thread);
    static void addic_(PPUInstruction instr, PPUThread& thread);
    static void addis(PPUInstruction instr, PPUThread& thread);
    static void addme(PPUInstruction instr, PPUThread& thread);
    static void addze(PPUInstruction instr, PPUThread& thread);
    static void and(PPUInstruction instr, PPUThread& thread);
    static void andc(PPUInstruction instr, PPUThread& thread);
    static void andi_(PPUInstruction instr, PPUThread& thread);
    static void andis_(PPUInstruction instr, PPUThread& thread);
    static void b(PPUInstruction instr, PPUThread& thread);
    static void bc(PPUInstruction instr, PPUThread& thread);
    static void bcctr(PPUInstruction instr, PPUThread& thread);
    static void bclr(PPUInstruction instr, PPUThread& thread);
    static void cmp(PPUInstruction instr, PPUThread& thread);
    static void cmpi(PPUInstruction instr, PPUThread& thread);
    static void cmpl(PPUInstruction instr, PPUThread& thread);
    static void cmpli(PPUInstruction instr, PPUThread& thread);
    static void cntlzd(PPUInstruction instr, PPUThread& thread);
    static void cntlzw(PPUInstruction instr, PPUThread& thread);
    static void crand(PPUInstruction instr, PPUThread& thread);
    static void crandc(PPUInstruction instr, PPUThread& thread);
    static void creqv(PPUInstruction instr, PPUThread& thread);
    static void crnand(PPUInstruction instr, PPUThread& thread);
    static void crnor(PPUInstruction instr, PPUThread& thread);
    static void cror(PPUInstruction instr, PPUThread& thread);
    static void crorc(PPUInstruction instr, PPUThread& thread);
    static void crxor(PPUInstruction instr, PPUThread& thread);
    static void dcbf(PPUInstruction instr, PPUThread& thread);
    static void dcbst(PPUInstruction instr, PPUThread& thread);
    static void dcbt(PPUInstruction instr, PPUThread& thread);
    static void dcbtst(PPUInstruction instr, PPUThread& thread);
    static void dcbz(PPUInstruction instr, PPUThread& thread);
    static void divd(PPUInstruction instr, PPUThread& thread);
    static void divdu(PPUInstruction instr, PPUThread& thread);
    static void divw(PPUInstruction instr, PPUThread& thread);
    static void divwu(PPUInstruction instr, PPUThread& thread);
    static void dss(PPUInstruction instr, PPUThread& thread);
    static void dst(PPUInstruction instr, PPUThread& thread);
    static void dstst(PPUInstruction instr, PPUThread& thread);
    static void eciwx(PPUInstruction instr, PPUThread& thread);
    static void ecowx(PPUInstruction instr, PPUThread& thread);
    static void eieio(PPUInstruction instr, PPUThread& thread);
    static void eqv(PPUInstruction instr, PPUThread& thread);
    static void extsb(PPUInstruction instr, PPUThread& thread);
    static void extsh(PPUInstruction instr, PPUThread& thread);
    static void extsw(PPUInstruction instr, PPUThread& thread);
    static void icbi(PPUInstruction instr, PPUThread& thread);
    static void isync(PPUInstruction instr, PPUThread& thread);
    static void lbz(PPUInstruction instr, PPUThread& thread);
    static void lbzu(PPUInstruction instr, PPUThread& thread);
    static void lbzux(PPUInstruction instr, PPUThread& thread);
    static void lbzx(PPUInstruction instr, PPUThread& thread);
    static void ld(PPUInstruction instr, PPUThread& thread);
    static void ldarx(PPUInstruction instr, PPUThread& thread);
    static void ldbrx(PPUInstruction instr, PPUThread& thread);
    static void ldu(PPUInstruction instr, PPUThread& thread);
    static void ldux(PPUInstruction instr, PPUThread& thread);
    static void ldx(PPUInstruction instr, PPUThread& thread);
    static void lha(PPUInstruction instr, PPUThread& thread);
    static void lhau(PPUInstruction instr, PPUThread& thread);
    static void lhaux(PPUInstruction instr, PPUThread& thread);
    static void lhax(PPUInstruction instr, PPUThread& thread);
    static void lhbrx(PPUInstruction instr, PPUThread& thread);
    static void lhz(PPUInstruction instr, PPUThread& thread);
    static void lhzu(PPUInstruction instr, PPUThread& thread);
    static void lhzux(PPUInstruction instr, PPUThread& thread);
    static void lhzx(PPUInstruction instr, PPUThread& thread);
    static void lmw(PPUInstruction instr, PPUThread& thread);
    static void lswi(PPUInstruction instr, PPUThread& thread);
    static void lswx(PPUInstruction instr, PPUThread& thread);
    static void lwa(PPUInstruction instr, PPUThread& thread);
    static void lwarx(PPUInstruction instr, PPUThread& thread);
    static void lwaux(PPUInstruction instr, PPUThread& thread);
    static void lwax(PPUInstruction instr, PPUThread& thread);
    static void lwbrx(PPUInstruction instr, PPUThread& thread);
    static void lwz(PPUInstruction instr, PPUThread& thread);
    static void lwzu(PPUInstruction instr, PPUThread& thread);
    static void lwzux(PPUInstruction instr, PPUThread& thread);
    static void lwzx(PPUInstruction instr, PPUThread& thread);
    static void mcrf(PPUInstruction instr, PPUThread& thread);
    static void mcrfs(PPUInstruction instr, PPUThread& thread);
    static void mfocrf(PPUInstruction instr, PPUThread& thread);
    static void mfspr(PPUInstruction instr, PPUThread& thread);
    static void mftb(PPUInstruction instr, PPUThread& thread);
    static void mtfsb0(PPUInstruction instr, PPUThread& thread);
    static void mtfsb1(PPUInstruction instr, PPUThread& thread);
    static void mtfsfi(PPUInstruction instr, PPUThread& thread);
    static void mtocrf(PPUInstruction instr, PPUThread& thread);
    static void mtspr(PPUInstruction instr, PPUThread& thread);
    static void mulhd(PPUInstruction instr, PPUThread& thread);
    static void mulhdu(PPUInstruction instr, PPUThread& thread);
    static void mulhw(PPUInstruction instr, PPUThread& thread);
    static void mulhwu(PPUInstruction instr, PPUThread& thread);
    static void mulld(PPUInstruction instr, PPUThread& thread);
    static void mulli(PPUInstruction instr, PPUThread& thread);
    static void mullw(PPUInstruction instr, PPUThread& thread);
    static void nand(PPUInstruction instr, PPUThread& thread);
    static void neg(PPUInstruction instr, PPUThread& thread);
    static void nop(PPUInstruction instr, PPUThread& thread);
    static void nor(PPUInstruction instr, PPUThread& thread);
    static void or(PPUInstruction instr, PPUThread& thread);
    static void orc(PPUInstruction instr, PPUThread& thread);
    static void ori(PPUInstruction instr, PPUThread& thread);
    static void oris(PPUInstruction instr, PPUThread& thread);
    static void rldc_lr(PPUInstruction instr, PPUThread& thread);
    static void rldic(PPUInstruction instr, PPUThread& thread);
    static void rldicl(PPUInstruction instr, PPUThread& thread);
    static void rldicr(PPUInstruction instr, PPUThread& thread);
    static void rldimi(PPUInstruction instr, PPUThread& thread);
    static void rlwimi(PPUInstruction instr, PPUThread& thread);
    static void rlwinm(PPUInstruction instr, PPUThread& thread);
    static void rlwnm(PPUInstruction instr, PPUThread& thread);
    static void sc(PPUInstruction instr, PPUThread& thread_code);
    static void sld(PPUInstruction instr, PPUThread& thread);
    static void slw(PPUInstruction instr, PPUThread& thread);
    static void srad(PPUInstruction instr, PPUThread& thread);
    static void sradi1(PPUInstruction instr, PPUThread& thread);
    static void sradi2(PPUInstruction instr, PPUThread& thread);
    static void sraw(PPUInstruction instr, PPUThread& thread);
    static void srawi(PPUInstruction instr, PPUThread& thread);
    static void srd(PPUInstruction instr, PPUThread& thread);
    static void srw(PPUInstruction instr, PPUThread& thread);
    static void stb(PPUInstruction instr, PPUThread& thread);
    static void stbu(PPUInstruction instr, PPUThread& thread);
    static void stbux(PPUInstruction instr, PPUThread& thread);
    static void stbx(PPUInstruction instr, PPUThread& thread);
    static void std(PPUInstruction instr, PPUThread& thread);
    static void stdcx_(PPUInstruction instr, PPUThread& thread);
    static void stdu(PPUInstruction instr, PPUThread& thread);
    static void stdux(PPUInstruction instr, PPUThread& thread);
    static void stdx(PPUInstruction instr, PPUThread& thread);
    static void sth(PPUInstruction instr, PPUThread& thread);
    static void sthbrx(PPUInstruction instr, PPUThread& thread);
    static void sthu(PPUInstruction instr, PPUThread& thread);
    static void sthux(PPUInstruction instr, PPUThread& thread);
    static void sthx(PPUInstruction instr, PPUThread& thread);
    static void stmw(PPUInstruction instr, PPUThread& thread);
    static void stswi(PPUInstruction instr, PPUThread& thread);
    static void stswx(PPUInstruction instr, PPUThread& thread);
    static void stvrxl(PPUInstruction instr, PPUThread& thread);
    static void stw(PPUInstruction instr, PPUThread& thread);
    static void stwbrx(PPUInstruction instr, PPUThread& thread);
    static void stwcx_(PPUInstruction instr, PPUThread& thread);
    static void stwu(PPUInstruction instr, PPUThread& thread);
    static void stwux(PPUInstruction instr, PPUThread& thread);
    static void stwx(PPUInstruction instr, PPUThread& thread);
    static void subf(PPUInstruction instr, PPUThread& thread);
    static void subfc(PPUInstruction instr, PPUThread& thread);
    static void subfe(PPUInstruction instr, PPUThread& thread);
    static void subfic(PPUInstruction instr, PPUThread& thread);
    static void subfme(PPUInstruction instr, PPUThread& thread);
    static void subfze(PPUInstruction instr, PPUThread& thread);
    static void sync(PPUInstruction instr, PPUThread& thread);
    static void td(PPUInstruction instr, PPUThread& thread);
    static void tdi(PPUInstruction instr, PPUThread& thread);
    static void tw(PPUInstruction instr, PPUThread& thread);
    static void twi(PPUInstruction instr, PPUThread& thread);
    static void xor(PPUInstruction instr, PPUThread& thread);
    static void xori(PPUInstruction instr, PPUThread& thread);
    static void xoris(PPUInstruction instr, PPUThread& thread);

    // Floating-Point Unit instructions
    static void lfd(PPUInstruction instr, PPUThread& thread);
    static void lfdu(PPUInstruction instr, PPUThread& thread);
    static void lfdux(PPUInstruction instr, PPUThread& thread);
    static void lfdx(PPUInstruction instr, PPUThread& thread);
    static void lfs(PPUInstruction instr, PPUThread& thread);
    static void lfsu(PPUInstruction instr, PPUThread& thread);
    static void lfsux(PPUInstruction instr, PPUThread& thread);
    static void lfsx(PPUInstruction instr, PPUThread& thread);
    static void mffs(PPUInstruction instr, PPUThread& thread);
    static void mtfsf(PPUInstruction instr, PPUThread& thread);
    static void fabs(PPUInstruction instr, PPUThread& thread);
    static void fadd(PPUInstruction instr, PPUThread& thread);
    static void fadds(PPUInstruction instr, PPUThread& thread);
    static void fcfid(PPUInstruction instr, PPUThread& thread);
    static void fcmpo(PPUInstruction instr, PPUThread& thread);
    static void fcmpu(PPUInstruction instr, PPUThread& thread);
    static void fctid(PPUInstruction instr, PPUThread& thread);
    static void fctidz(PPUInstruction instr, PPUThread& thread);
    static void fctiw(PPUInstruction instr, PPUThread& thread);
    static void fctiwz(PPUInstruction instr, PPUThread& thread);
    static void fdiv(PPUInstruction instr, PPUThread& thread);
    static void fdivs(PPUInstruction instr, PPUThread& thread);
    static void fmadd(PPUInstruction instr, PPUThread& thread);
    static void fmadds(PPUInstruction instr, PPUThread& thread);
    static void fmr(PPUInstruction instr, PPUThread& thread);
    static void fmsub(PPUInstruction instr, PPUThread& thread);
    static void fmsubs(PPUInstruction instr, PPUThread& thread);
    static void fmul(PPUInstruction instr, PPUThread& thread);
    static void fmuls(PPUInstruction instr, PPUThread& thread);
    static void fnabs(PPUInstruction instr, PPUThread& thread);
    static void fneg(PPUInstruction instr, PPUThread& thread);
    static void fnmadd(PPUInstruction instr, PPUThread& thread);
    static void fnmadds(PPUInstruction instr, PPUThread& thread);
    static void fnmsub(PPUInstruction instr, PPUThread& thread);
    static void fnmsubs(PPUInstruction instr, PPUThread& thread);
    static void fres(PPUInstruction instr, PPUThread& thread);
    static void frsp(PPUInstruction instr, PPUThread& thread);
    static void frsqrte(PPUInstruction instr, PPUThread& thread);
    static void fsel(PPUInstruction instr, PPUThread& thread);
    static void fsqrt(PPUInstruction instr, PPUThread& thread);
    static void fsqrts(PPUInstruction instr, PPUThread& thread);
    static void fsub(PPUInstruction instr, PPUThread& thread);
    static void fsubs(PPUInstruction instr, PPUThread& thread);
    static void stfd(PPUInstruction instr, PPUThread& thread);
    static void stfdu(PPUInstruction instr, PPUThread& thread);
    static void stfdux(PPUInstruction instr, PPUThread& thread);
    static void stfdx(PPUInstruction instr, PPUThread& thread);
    static void stfiwx(PPUInstruction instr, PPUThread& thread);
    static void stfs(PPUInstruction instr, PPUThread& thread);
    static void stfsu(PPUInstruction instr, PPUThread& thread);
    static void stfsux(PPUInstruction instr, PPUThread& thread);
    static void stfsx(PPUInstruction instr, PPUThread& thread);

    // Vector/SIMD instructions
    static void lvebx(PPUInstruction instr, PPUThread& thread);
    static void lvehx(PPUInstruction instr, PPUThread& thread);
    static void lvewx(PPUInstruction instr, PPUThread& thread);
    static void lvlx(PPUInstruction instr, PPUThread& thread);
    static void lvlxl(PPUInstruction instr, PPUThread& thread);
    static void lvrx(PPUInstruction instr, PPUThread& thread);
    static void lvrxl(PPUInstruction instr, PPUThread& thread);
    static void lvsl(PPUInstruction instr, PPUThread& thread);
    static void lvsr(PPUInstruction instr, PPUThread& thread);
    static void lvx(PPUInstruction instr, PPUThread& thread);
    static void lvxl(PPUInstruction instr, PPUThread& thread);
    static void mfvscr(PPUInstruction instr, PPUThread& thread);
    static void mtvscr(PPUInstruction instr, PPUThread& thread);
    static void stvebx(PPUInstruction instr, PPUThread& thread);
    static void stvehx(PPUInstruction instr, PPUThread& thread);
    static void stvewx(PPUInstruction instr, PPUThread& thread);
    static void stvlx(PPUInstruction instr, PPUThread& thread);
    static void stvlxl(PPUInstruction instr, PPUThread& thread);
    static void stvrx(PPUInstruction instr, PPUThread& thread);
    static void stvx(PPUInstruction instr, PPUThread& thread);
    static void stvxl(PPUInstruction instr, PPUThread& thread);
    static void vaddcuw(PPUInstruction instr, PPUThread& thread);
    static void vaddfp(PPUInstruction instr, PPUThread& thread);
    static void vaddsbs(PPUInstruction instr, PPUThread& thread);
    static void vaddshs(PPUInstruction instr, PPUThread& thread);
    static void vaddsws(PPUInstruction instr, PPUThread& thread);
    static void vaddubm(PPUInstruction instr, PPUThread& thread);
    static void vaddubs(PPUInstruction instr, PPUThread& thread);
    static void vadduhm(PPUInstruction instr, PPUThread& thread);
    static void vadduhs(PPUInstruction instr, PPUThread& thread);
    static void vadduwm(PPUInstruction instr, PPUThread& thread);
    static void vadduws(PPUInstruction instr, PPUThread& thread);
    static void vand(PPUInstruction instr, PPUThread& thread);
    static void vandc(PPUInstruction instr, PPUThread& thread);
    static void vavgsb(PPUInstruction instr, PPUThread& thread);
    static void vavgsh(PPUInstruction instr, PPUThread& thread);
    static void vavgsw(PPUInstruction instr, PPUThread& thread);
    static void vavgub(PPUInstruction instr, PPUThread& thread);
    static void vavguh(PPUInstruction instr, PPUThread& thread);
    static void vavguw(PPUInstruction instr, PPUThread& thread);
    static void vcfsx(PPUInstruction instr, PPUThread& thread);
    static void vcfux(PPUInstruction instr, PPUThread& thread);
    static void vcmpbfp(PPUInstruction instr, PPUThread& thread);
    static void vcmpbfp_(PPUInstruction instr, PPUThread& thread);
    static void vcmpeqfp(PPUInstruction instr, PPUThread& thread);
    static void vcmpeqfp_(PPUInstruction instr, PPUThread& thread);
    static void vcmpequb(PPUInstruction instr, PPUThread& thread);
    static void vcmpequb_(PPUInstruction instr, PPUThread& thread);
    static void vcmpequh(PPUInstruction instr, PPUThread& thread);
    static void vcmpequh_(PPUInstruction instr, PPUThread& thread);
    static void vcmpequw(PPUInstruction instr, PPUThread& thread);
    static void vcmpequw_(PPUInstruction instr, PPUThread& thread);
    static void vcmpgefp(PPUInstruction instr, PPUThread& thread);
    static void vcmpgefp_(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtfp(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtfp_(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtsb(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtsb_(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtsh(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtsh_(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtsw(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtsw_(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtub(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtub_(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtuh(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtuh_(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtuw(PPUInstruction instr, PPUThread& thread);
    static void vcmpgtuw_(PPUInstruction instr, PPUThread& thread);
    static void vctsxs(PPUInstruction instr, PPUThread& thread);
    static void vctuxs(PPUInstruction instr, PPUThread& thread);
    static void vexptefp(PPUInstruction instr, PPUThread& thread);
    static void vlogefp(PPUInstruction instr, PPUThread& thread);
    static void vmaddfp(PPUInstruction instr, PPUThread& thread);
    static void vmaxfp(PPUInstruction instr, PPUThread& thread);
    static void vmaxsb(PPUInstruction instr, PPUThread& thread);
    static void vmaxsh(PPUInstruction instr, PPUThread& thread);
    static void vmaxsw(PPUInstruction instr, PPUThread& thread);
    static void vmaxub(PPUInstruction instr, PPUThread& thread);
    static void vmaxuh(PPUInstruction instr, PPUThread& thread);
    static void vmaxuw(PPUInstruction instr, PPUThread& thread);
    static void vmhaddshs(PPUInstruction instr, PPUThread& thread);
    static void vmhraddshs(PPUInstruction instr, PPUThread& thread);
    static void vminfp(PPUInstruction instr, PPUThread& thread);
    static void vminsb(PPUInstruction instr, PPUThread& thread);
    static void vminsh(PPUInstruction instr, PPUThread& thread);
    static void vminsw(PPUInstruction instr, PPUThread& thread);
    static void vminub(PPUInstruction instr, PPUThread& thread);
    static void vminuh(PPUInstruction instr, PPUThread& thread);
    static void vminuw(PPUInstruction instr, PPUThread& thread);
    static void vmladduhm(PPUInstruction instr, PPUThread& thread);
    static void vmrghb(PPUInstruction instr, PPUThread& thread);
    static void vmrghh(PPUInstruction instr, PPUThread& thread);
    static void vmrghw(PPUInstruction instr, PPUThread& thread);
    static void vmrglb(PPUInstruction instr, PPUThread& thread);
    static void vmrglh(PPUInstruction instr, PPUThread& thread);
    static void vmrglw(PPUInstruction instr, PPUThread& thread);
    static void vmsummbm(PPUInstruction instr, PPUThread& thread);
    static void vmsumshm(PPUInstruction instr, PPUThread& thread);
    static void vmsumshs(PPUInstruction instr, PPUThread& thread);
    static void vmsumubm(PPUInstruction instr, PPUThread& thread);
    static void vmsumuhm(PPUInstruction instr, PPUThread& thread);
    static void vmsumuhs(PPUInstruction instr, PPUThread& thread);
    static void vmulesb(PPUInstruction instr, PPUThread& thread);
    static void vmulesh(PPUInstruction instr, PPUThread& thread);
    static void vmuleub(PPUInstruction instr, PPUThread& thread);
    static void vmuleuh(PPUInstruction instr, PPUThread& thread);
    static void vmulosb(PPUInstruction instr, PPUThread& thread);
    static void vmulosh(PPUInstruction instr, PPUThread& thread);
    static void vmuloub(PPUInstruction instr, PPUThread& thread);
    static void vmulouh(PPUInstruction instr, PPUThread& thread);
    static void vnmsubfp(PPUInstruction instr, PPUThread& thread);
    static void vnor(PPUInstruction instr, PPUThread& thread);
    static void vor(PPUInstruction instr, PPUThread& thread);
    static void vperm(PPUInstruction instr, PPUThread& thread);
    static void vpkpx(PPUInstruction instr, PPUThread& thread);
    static void vpkshss(PPUInstruction instr, PPUThread& thread);
    static void vpkshus(PPUInstruction instr, PPUThread& thread);
    static void vpkswss(PPUInstruction instr, PPUThread& thread);
    static void vpkswus(PPUInstruction instr, PPUThread& thread);
    static void vpkuhum(PPUInstruction instr, PPUThread& thread);
    static void vpkuhus(PPUInstruction instr, PPUThread& thread);
    static void vpkuwum(PPUInstruction instr, PPUThread& thread);
    static void vpkuwus(PPUInstruction instr, PPUThread& thread);
    static void vrefp(PPUInstruction instr, PPUThread& thread);
    static void vrfim(PPUInstruction instr, PPUThread& thread);
    static void vrfin(PPUInstruction instr, PPUThread& thread);
    static void vrfip(PPUInstruction instr, PPUThread& thread);
    static void vrfiz(PPUInstruction instr, PPUThread& thread);
    static void vrlb(PPUInstruction instr, PPUThread& thread);
    static void vrlh(PPUInstruction instr, PPUThread& thread);
    static void vrlw(PPUInstruction instr, PPUThread& thread);
    static void vrsqrtefp(PPUInstruction instr, PPUThread& thread);
    static void vsel(PPUInstruction instr, PPUThread& thread);
    static void vsl(PPUInstruction instr, PPUThread& thread);
    static void vslb(PPUInstruction instr, PPUThread& thread);
    static void vsldoi(PPUInstruction instr, PPUThread& thread);
    static void vslh(PPUInstruction instr, PPUThread& thread);
    static void vslo(PPUInstruction instr, PPUThread& thread);
    static void vslw(PPUInstruction instr, PPUThread& thread);
    static void vspltb(PPUInstruction instr, PPUThread& thread);
    static void vsplth(PPUInstruction instr, PPUThread& thread);
    static void vspltisb(PPUInstruction instr, PPUThread& thread);
    static void vspltish(PPUInstruction instr, PPUThread& thread);
    static void vspltisw(PPUInstruction instr, PPUThread& thread);
    static void vspltw(PPUInstruction instr, PPUThread& thread);
    static void vsr(PPUInstruction instr, PPUThread& thread);
    static void vsrab(PPUInstruction instr, PPUThread& thread);
    static void vsrah(PPUInstruction instr, PPUThread& thread);
    static void vsraw(PPUInstruction instr, PPUThread& thread);
    static void vsrb(PPUInstruction instr, PPUThread& thread);
    static void vsrh(PPUInstruction instr, PPUThread& thread);
    static void vsro(PPUInstruction instr, PPUThread& thread);
    static void vsrw(PPUInstruction instr, PPUThread& thread);
    static void vsubcuw(PPUInstruction instr, PPUThread& thread);
    static void vsubfp(PPUInstruction instr, PPUThread& thread);
    static void vsubsbs(PPUInstruction instr, PPUThread& thread);
    static void vsubshs(PPUInstruction instr, PPUThread& thread);
    static void vsubsws(PPUInstruction instr, PPUThread& thread);
    static void vsububm(PPUInstruction instr, PPUThread& thread);
    static void vsububs(PPUInstruction instr, PPUThread& thread);
    static void vsubuhm(PPUInstruction instr, PPUThread& thread);
    static void vsubuhs(PPUInstruction instr, PPUThread& thread);
    static void vsubuwm(PPUInstruction instr, PPUThread& thread);
    static void vsubuws(PPUInstruction instr, PPUThread& thread);
    static void vsum2sws(PPUInstruction instr, PPUThread& thread);
    static void vsum4sbs(PPUInstruction instr, PPUThread& thread);
    static void vsum4shs(PPUInstruction instr, PPUThread& thread);
    static void vsum4ubs(PPUInstruction instr, PPUThread& thread);
    static void vsumsws(PPUInstruction instr, PPUThread& thread);
    static void vupkhpx(PPUInstruction instr, PPUThread& thread);
    static void vupkhsb(PPUInstruction instr, PPUThread& thread);
    static void vupkhsh(PPUInstruction instr, PPUThread& thread);
    static void vupklpx(PPUInstruction instr, PPUThread& thread);
    static void vupklsb(PPUInstruction instr, PPUThread& thread);
    static void vupklsh(PPUInstruction instr, PPUThread& thread);
    static void vxor(PPUInstruction instr, PPUThread& thread);

    // Unknown instruction
    static void unknown(PPUInstruction instr, PPUThread& thread);
    static void unknown2(const std::string& instr);
};
