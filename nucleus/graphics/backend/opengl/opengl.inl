/**
 * (c) 2014-2016 Alexandro Sanchez Bach. All rights reserved.
 * Released under GPL v2 license. Read LICENSE for more details.
 */

// Common extensions
EXTENSION(PFNGLACTIVETEXTUREPROC, glActiveTexture);
EXTENSION(PFNGLATTACHSHADERPROC, glAttachShader);
EXTENSION(PFNGLBINDBUFFERPROC, glBindBuffer);
EXTENSION(PFNGLBINDFRAMEBUFFERPROC, glBindFramebuffer);
EXTENSION(PFNGLBINDRENDERBUFFERPROC, glBindRenderbuffer);
EXTENSION(PFNGLBINDVERTEXARRAYPROC, glBindVertexArray);
EXTENSION(PFNGLBINDVERTEXBUFFERPROC, glBindVertexBuffer);
EXTENSION(PFNGLBLENDFUNCSEPARATEPROC, glBlendFuncSeparate);
EXTENSION(PFNGLBUFFERDATAPROC, glBufferData);
EXTENSION(PFNGLCHECKFRAMEBUFFERSTATUSPROC, glCheckFramebufferStatus);
EXTENSION(PFNGLCLEARBUFFERFIPROC, glClearBufferfi);
EXTENSION(PFNGLCLEARBUFFERFVPROC, glClearBufferfv);
EXTENSION(PFNGLCOMPILESHADERPROC, glCompileShader);
EXTENSION(PFNGLCREATEPROGRAMPROC, glCreateProgram);
EXTENSION(PFNGLCREATESHADERPROC, glCreateShader);
EXTENSION(PFNGLDELETEBUFFERSPROC, glDeleteBuffers);
EXTENSION(PFNGLDELETEFRAMEBUFFERSPROC, glDeleteFramebuffers);
EXTENSION(PFNGLDELETEPROGRAMPROC, glDeleteProgram);
EXTENSION(PFNGLDELETESHADERPROC, glDeleteShader);
EXTENSION(PFNGLDETACHSHADERPROC, glDetachShader);
EXTENSION(PFNGLDISABLEVERTEXATTRIBARRAYPROC, glDisableVertexAttribArray);
EXTENSION(PFNGLDRAWBUFFERSPROC, glDrawBuffers);
EXTENSION(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray);
EXTENSION(PFNGLFRAMEBUFFERRENDERBUFFERPROC, glFramebufferRenderbuffer);
EXTENSION(PFNGLFRAMEBUFFERTEXTURE2DPROC, glFramebufferTexture2D);
EXTENSION(PFNGLGENBUFFERSPROC, glGenBuffers);
EXTENSION(PFNGLGENFRAMEBUFFERSPROC, glGenFramebuffers);
EXTENSION(PFNGLGENRENDERBUFFERSPROC, glGenRenderbuffers);
EXTENSION(PFNGLGENVERTEXARRAYSPROC, glGenVertexArrays);
EXTENSION(PFNGLGETATTRIBLOCATIONPROC, glGetAttribLocation);
EXTENSION(PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC, glGetFramebufferAttachmentParameteriv);
EXTENSION(PFNGLGETPROGRAMINFOLOGPROC, glGetProgramInfoLog);
EXTENSION(PFNGLGETPROGRAMIVPROC, glGetProgramiv);
EXTENSION(PFNGLGETSHADERINFOLOGPROC, glGetShaderInfoLog);
EXTENSION(PFNGLGETSHADERIVPROC, glGetShaderiv);
EXTENSION(PFNGLGETUNIFORMLOCATIONPROC, glGetUniformLocation);
EXTENSION(PFNGLLINKPROGRAMPROC, glLinkProgram);
EXTENSION(PFNGLMAPBUFFERRANGEPROC, glMapBufferRange);
EXTENSION(PFNGLRENDERBUFFERSTORAGEPROC, glRenderbufferStorage);
EXTENSION(PFNGLSHADERSOURCEPROC, glShaderSource);
EXTENSION(PFNGLUNIFORM1FPROC, glUniform1f);
EXTENSION(PFNGLUNIFORM1FVPROC, glUniform1fv);
EXTENSION(PFNGLUNIFORM1IPROC, glUniform1i);
EXTENSION(PFNGLUNIFORM1IVPROC, glUniform1iv);
EXTENSION(PFNGLUNIFORM1UIPROC, glUniform1ui);
EXTENSION(PFNGLUNIFORM1UIVPROC, glUniform1uiv);
EXTENSION(PFNGLUNIFORM2FPROC, glUniform2f);
EXTENSION(PFNGLUNIFORM2FVPROC, glUniform2fv);
EXTENSION(PFNGLUNIFORM2IPROC, glUniform2i);
EXTENSION(PFNGLUNIFORM2IVPROC, glUniform2iv);
EXTENSION(PFNGLUNIFORM2UIPROC, glUniform2ui);
EXTENSION(PFNGLUNIFORM2UIVPROC, glUniform2uiv);
EXTENSION(PFNGLUNIFORM3FPROC, glUniform3f);
EXTENSION(PFNGLUNIFORM3FVPROC, glUniform3fv);
EXTENSION(PFNGLUNIFORM3IPROC, glUniform3i);
EXTENSION(PFNGLUNIFORM3IVPROC, glUniform3iv);
EXTENSION(PFNGLUNIFORM3UIPROC, glUniform3ui);
EXTENSION(PFNGLUNIFORM3UIVPROC, glUniform3uiv);
EXTENSION(PFNGLUNIFORM4FPROC, glUniform4f);
EXTENSION(PFNGLUNIFORM4FPROC, glUniform4i);
EXTENSION(PFNGLUNIFORM4FVPROC, glUniform4fv);
EXTENSION(PFNGLUNIFORM4IVPROC, glUniform4iv);
EXTENSION(PFNGLUNIFORM4UIPROC, glUniform4ui);
EXTENSION(PFNGLUNIFORM4UIVPROC, glUniform4uiv);
EXTENSION(PFNGLUNMAPBUFFERPROC, glUnmapBuffer);
EXTENSION(PFNGLUSEPROGRAMPROC, glUseProgram);
EXTENSION(PFNGLVERTEXATTRIBBINDINGPROC, glVertexAttribBinding);
EXTENSION(PFNGLVERTEXATTRIBFORMATPROC, glVertexAttribFormat);
EXTENSION(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer);

// OpenGL-only extensions
#ifdef GRAPHICS_OPENGL_GL
EXTENSION(PFNGLBINDVERTEXBUFFERSPROC, glBindVertexBuffers);
EXTENSION(PFNGLCLEARNAMEDFRAMEBUFFERFIPROC, glClearNamedFramebufferfi);
EXTENSION(PFNGLCLEARNAMEDFRAMEBUFFERFVPROC, glClearNamedFramebufferfv);
EXTENSION(PFNGLDEBUGMESSAGECALLBACKPROC, glDebugMessageCallback);
EXTENSION(PFNGLDEBUGMESSAGECONTROLPROC, glDebugMessageControl);
EXTENSION(PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC, glDrawArraysInstancedBaseInstance);
EXTENSION(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC, glDrawElementsInstancedBaseVertexBaseInstance);
EXTENSION(PFNGLFRAMEBUFFERTEXTUREPROC, glFramebufferTexture);
EXTENSION(PFNGLMAPBUFFERPROC, glMapBuffer);
EXTENSION(PFNGLMAPNAMEDBUFFERPROC, glMapNamedBuffer);
EXTENSION(PFNGLUNMAPNAMEDBUFFERPROC, glUnmapNamedBuffer);
#endif

// OpenGLES-only extensions
#ifdef GRAPHICS_OPENGL_GLES
EXTENSION(PFNGLFINISHPROC, glFinish);
EXTENSION(PFNGLGENTEXTURESPROC, glGenTextures);
EXTENSION(PFNGLGETERRORPROC, glGetError);
EXTENSION(PFNGLSCISSORPROC, glScissor);
EXTENSION(PFNGLVIEWPORTPROC, glViewport);
#endif

// Windows-specific extensions
#ifdef NUCLEUS_PLATFORM_WINDOWS
EXTENSION(PFNWGLCREATECONTEXTATTRIBSARBPROC, wglCreateContextAttribsARB);
EXTENSION(PFNWGLSWAPINTERVALEXTPROC, wglSwapIntervalEXT);
#endif
